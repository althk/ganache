syntax = "proto3";

option go_package="github.com/althk/ganache/cacheserver/proto";

package ganache.cs;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service Cache {
	rpc Get(GetRequest) returns (GetResponse) {}
	rpc Set(SetRequest) returns (google.protobuf.Empty) {}
	rpc Stats(google.protobuf.Empty) returns (StatsResponse) {}
}

message GetRequest {
	string namespace = 1;
	string key = 2;
}

message GetResponse {
	google.protobuf.Any data = 1;
}

// internal usage
message CacheValue {
	google.protobuf.Any data = 1;
	google.protobuf.Timestamp source_ts = 2;
}

message SetRequest {
	string namespace = 1;
	string key = 2;
	google.protobuf.Any data = 3;
	bool global = 4;
}

message StatsResponse {
	uint64 get_req_count = 1;
	uint64 set_req_count = 2;
	uint64 total_req_count = 3;
	uint64 cache_hit_ratio = 4;
	uint64 total_cache_size_bytes = 5; // in bytes
	uint64 total_keys_count = 6;
	int32 shard_number = 7;
}

message CacheKeyMetadata {
	string source = 1;
	string key = 2;
	CacheValue value = 3;
}